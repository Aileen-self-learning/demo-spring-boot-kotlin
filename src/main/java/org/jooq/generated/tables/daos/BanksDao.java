/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Banks;
import org.jooq.generated.tables.records.BanksRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BanksDao extends DAOImpl<BanksRecord, org.jooq.generated.tables.pojos.Banks, String> {

    /**
     * Create a new BanksDao without any configuration
     */
    public BanksDao() {
        super(Banks.BANKS, org.jooq.generated.tables.pojos.Banks.class);
    }

    /**
     * Create a new BanksDao with an attached configuration
     */
    public BanksDao(Configuration configuration) {
        super(Banks.BANKS, org.jooq.generated.tables.pojos.Banks.class, configuration);
    }

    @Override
    public String getId(org.jooq.generated.tables.pojos.Banks object) {
        return object.getAccountNumber();
    }

    /**
     * Fetch records that have <code>account_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Banks> fetchRangeOfAccountNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Banks.BANKS.ACCOUNT_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_number IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Banks> fetchByAccountNumber(String... values) {
        return fetch(Banks.BANKS.ACCOUNT_NUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>account_number = value</code>
     */
    public org.jooq.generated.tables.pojos.Banks fetchOneByAccountNumber(String value) {
        return fetchOne(Banks.BANKS.ACCOUNT_NUMBER, value);
    }

    /**
     * Fetch a unique record that has <code>account_number = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Banks> fetchOptionalByAccountNumber(String value) {
        return fetchOptional(Banks.BANKS.ACCOUNT_NUMBER, value);
    }

    /**
     * Fetch records that have <code>trust BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Banks> fetchRangeOfTrust(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Banks.BANKS.TRUST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trust IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Banks> fetchByTrust(Double... values) {
        return fetch(Banks.BANKS.TRUST, values);
    }

    /**
     * Fetch records that have <code>transaction_fee BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Banks> fetchRangeOfTransactionFee(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Banks.BANKS.TRANSACTION_FEE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_fee IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Banks> fetchByTransactionFee(Integer... values) {
        return fetch(Banks.BANKS.TRANSACTION_FEE, values);
    }
}
